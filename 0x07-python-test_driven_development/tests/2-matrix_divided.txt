The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------
import module:
    >>> matrix_divided =  __import__("2-matrix_divided").matrix_divided

Normal case:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 1)
    [[1, 2, 3], [4, 5, 6]]
    
Matrix with strings:
    >>> matrix = [[a, b, c], [d, e, f]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
            ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix with different rows:
    >>> matrix = [[1, 2, 3], [4, 5]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
            ...
    TypeError: Each row of the matrix must have the same size

Div not a number:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, holberton)
    Traceback (most recent call last):
            ...
    TypeError: div must be a number

Div is 0:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
            ...
    ZeroDivisionError: division by zero

Float is rounded to 2 decimals:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
