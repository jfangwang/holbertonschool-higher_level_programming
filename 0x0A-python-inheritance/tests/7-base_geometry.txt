The ``7-base_geometry`` module
======================

Using ``BaseGeometry``
-------------------

import module:
    >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

Normal:
    >>> b = BaseGeometry()
    >>> b.integer_validator("int", 1)

Negative:
    >>> b = BaseGeometry()
    >>> b.integer_validator("int", -1)
    Traceback (most recent call last):
            ...
    ValueError: int must be greater than 0

Zero:
    >>> b = BaseGeometry()
    >>> b.integer_validator("int", 0)
    Traceback (most recent call last):
            ...
    ValueError: int must be greater than 0

Negative:
    >>> b = BaseGeometry()
    >>> b.integer_validator("int", -1)
    Traceback (most recent call last):
            ...
    ValueError: int must be greater than 0

Float:
    >>> b = BaseGeometry()
    >>> b.integer_validator("int", 1.23)
    Traceback (most recent call last):
            ...
    TypeError: int must be an integer

No Args:
    >>> b = BaseGeometry()
    >>> b.integer_validator()
    Traceback (most recent call last):
            ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Test Area:
    >>> b = BaseGeometry()
    >>> b.area()
    Traceback (most recent call last):
            ...
    Exception: area() is not implemented

String as arg:
    >>> b = BaseGeometry()
    >>> b.integer_validator("int", "test")
    Traceback (most recent call last):
            ...
    TypeError: int must be an integer
